package main

import (
	"fmt"
	"io/ioutil"
	"os"
	"sort"
	"strings"
)

func main() {
	if len(os.Args) <= 1 {
		fmt.Printf("USAGE : %s <target_filename> \n", os.Args)[0]
		os.Exit(0)
	}

	fileName := os.Args[1]( /*file*/ )

	fileBytes, err := ioutil.ReadFile(fileName)

	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
	
	SliceData := strings.Split(string(fileBytes), "\n")
	file.Close()

	EmptySlice := SliceData.Unikalnie_Znacheniya()
	EmptySlice:=EmptySlice.Upper()
	sort.Strings(EmptySlice)

	file, err := os.Create("hw1.txt")

	for i := 0; i < len(EmptySlice); i++ {

		text := EmptySlice[i]
		n := len(EmptySlice[i])

		if err != nil {
			fmt.Println("Unable to create file:", err)
			os.Exit(1)
		}

		file.WriteString(text)
		file.WriteString("-")
		file.WriteString(string(n), '\n')
	}

	defer file.Close()
	fmt.Println("Done.")
}

func Unikalnie_Znacheniya(SliceData []string{}){
	for i := 0; i < len(SliceData); i++ {
		k := 0
		for g := 0; g < len(sliceData)-1; g++ {

			if SliceData[i] == SliceData[g] {
				k++
			}
		}

		if k == 1 {
			EmptySlice = append(EmptySlice, sliceData[i])
		}
	}
	return EmptySlice
}

func Upper(EmptySlice[]string{}){
	for i := 0; i < len(EmptySlice); i++ {
		EmptySlice[i] = strings.ToUpper(EmptySlice[i])
	}
	return EmptySlice
}
